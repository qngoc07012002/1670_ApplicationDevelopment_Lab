// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _1670_ApplicationDevelopment_Lab.Data;

#nullable disable

namespace _1670_ApplicationDevelopment_Lab.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20231128093314_AddImageToBooks")]
    partial class AddImageToBooks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_1670_ApplicationDevelopment_Lab.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Microsoft",
                            CategoryId = 1,
                            Description = "Basic Start",
                            Price = 10.5,
                            Title = "Programming"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Nguyen Quang Ngoc",
                            CategoryId = 2,
                            Description = "Appppp DEVVVV",
                            Price = 20.0,
                            Title = "App Dev"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Ngoc Nguyen Quang",
                            CategoryId = 3,
                            Description = "Basic Python",
                            Price = 40.0,
                            Title = "Python"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Quang Ngoc",
                            CategoryId = 4,
                            Description = "Start C#",
                            Price = 30.0,
                            Title = "C#"
                        });
                });

            modelBuilder.Entity("_1670_ApplicationDevelopment_Lab.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Tinh Cam",
                            DisplayOrder = 2,
                            Name = "ABC"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Hanh Dong",
                            DisplayOrder = 2,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Kinh Di",
                            DisplayOrder = 2,
                            Name = "Horrnor"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Khoa Hoc",
                            DisplayOrder = 2,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Lich Su",
                            DisplayOrder = 2,
                            Name = "History"
                        });
                });

            modelBuilder.Entity("_1670_ApplicationDevelopment_Lab.Models.Book", b =>
                {
                    b.HasOne("_1670_ApplicationDevelopment_Lab.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
